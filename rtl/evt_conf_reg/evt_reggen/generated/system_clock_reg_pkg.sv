// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package system_clock_reg_pkg;

  // Param list
  parameter int STREAM_NUMBER = 2;
  parameter int SLICE_NUMBER = 1;
  parameter int GROUP_NUMBER = 16;
  parameter int TOTAL_GROUP_NUMBER = 16;
  parameter int XBAR_SLAVE_NUMBER = 4;
  parameter int XBAR_MASTER_NUMBER = 4;
  parameter int ORACLE_NUMBER = 9;
  parameter int NEURON_NUMBER = 4096;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////
  typedef struct packed {
    logic [31:0] q;
  } system_clock_reg2hw_cfg_main_ctrl_i_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } system_clock_reg2hw_cfg_out_stream_i_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } system_clock_reg2hw_cfg_tcdm_start_addr_i_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } system_clock_reg2hw_cfg_tcdm_addr_step_i_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } system_clock_reg2hw_cfg_tcdm_end_addr_i_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } system_clock_reg2hw_cfg_tcdm_tran_size_i_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } system_clock_reg2hw_cfg_sram_start_addr_i_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } system_clock_reg2hw_cfg_sram_addr_step_i_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } system_clock_reg2hw_cfg_sram_end_addr_i_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } system_clock_reg2hw_sta_main_status_o_mreg_t;

  typedef struct packed {
    struct packed {
      logic [7:0]  q;
    } x_dim;
    struct packed {
      logic [7:0]  q;
    } y_dim;
  } system_clock_reg2hw_cfg_fc_dimension_i_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } system_clock_reg2hw_cfg_fc_offset_i_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } system_clock_reg2hw_sta_trans_ptr_o_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } system_clock_reg2hw_cfg_fc_tran_size_i_mreg_t;


  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } system_clock_hw2reg_sta_main_status_o_mreg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } system_clock_hw2reg_sta_trans_ptr_o_mreg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } system_clock_hw2reg_cfg_fc_tran_size_i_mreg_t;


  ///////////////////////////////////////
  // Register to internal design logic //
  ///////////////////////////////////////
  typedef struct packed {
    system_clock_reg2hw_cfg_main_ctrl_i_mreg_t [1:0] cfg_main_ctrl_i; // [816:753]
    system_clock_reg2hw_cfg_out_stream_i_mreg_t [1:0] cfg_out_stream_i; // [752:689]
    system_clock_reg2hw_cfg_tcdm_start_addr_i_mreg_t [1:0] cfg_tcdm_start_addr_i; // [688:625]
    system_clock_reg2hw_cfg_tcdm_addr_step_i_mreg_t [1:0] cfg_tcdm_addr_step_i; // [624:561]
    system_clock_reg2hw_cfg_tcdm_end_addr_i_mreg_t [1:0] cfg_tcdm_end_addr_i; // [560:497]
    system_clock_reg2hw_cfg_tcdm_tran_size_i_mreg_t [1:0] cfg_tcdm_tran_size_i; // [496:433]
    system_clock_reg2hw_cfg_sram_start_addr_i_mreg_t [1:0] cfg_sram_start_addr_i; // [432:369]
    system_clock_reg2hw_cfg_sram_addr_step_i_mreg_t [1:0] cfg_sram_addr_step_i; // [368:305]
    system_clock_reg2hw_cfg_sram_end_addr_i_mreg_t [1:0] cfg_sram_end_addr_i; // [304:241]
    system_clock_reg2hw_sta_main_status_o_mreg_t [1:0] sta_main_status_o; // [240:177]
    system_clock_reg2hw_cfg_fc_dimension_i_reg_t cfg_fc_dimension_i; // [176:161]
    system_clock_reg2hw_cfg_fc_offset_i_reg_t cfg_fc_offset_i; // [160:129]
    system_clock_reg2hw_sta_trans_ptr_o_mreg_t [1:0] sta_trans_ptr_o; // [128:65]
    system_clock_reg2hw_cfg_fc_tran_size_i_mreg_t [1:0] cfg_fc_tran_size_i; // [64:1]
  } system_clock_reg2hw_t;

  ///////////////////////////////////////
  // Internal design logic to register //
  ///////////////////////////////////////
  typedef struct packed {
    system_clock_hw2reg_sta_main_status_o_mreg_t [1:0] sta_main_status_o; // [198:133]
    system_clock_hw2reg_sta_trans_ptr_o_mreg_t [1:0] sta_trans_ptr_o; // [132:67]
    system_clock_hw2reg_cfg_fc_tran_size_i_mreg_t [1:0] cfg_fc_tran_size_i; // [66:1]
  } system_clock_hw2reg_t;

  // Register Address
  parameter logic [6:0] SYSTEM_CLOCK_CFG_MAIN_CTRL_I_0_OFFSET = 7'h 0;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_MAIN_CTRL_I_1_OFFSET = 7'h 4;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_OUT_STREAM_I_0_OFFSET = 7'h 8;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_OUT_STREAM_I_1_OFFSET = 7'h c;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_TCDM_START_ADDR_I_0_OFFSET = 7'h 10;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_TCDM_START_ADDR_I_1_OFFSET = 7'h 14;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_TCDM_ADDR_STEP_I_0_OFFSET = 7'h 18;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_TCDM_ADDR_STEP_I_1_OFFSET = 7'h 1c;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_TCDM_END_ADDR_I_0_OFFSET = 7'h 20;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_TCDM_END_ADDR_I_1_OFFSET = 7'h 24;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_TCDM_TRAN_SIZE_I_0_OFFSET = 7'h 28;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_TCDM_TRAN_SIZE_I_1_OFFSET = 7'h 2c;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_SRAM_START_ADDR_I_0_OFFSET = 7'h 30;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_SRAM_START_ADDR_I_1_OFFSET = 7'h 34;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_SRAM_ADDR_STEP_I_0_OFFSET = 7'h 38;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_SRAM_ADDR_STEP_I_1_OFFSET = 7'h 3c;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_SRAM_END_ADDR_I_0_OFFSET = 7'h 40;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_SRAM_END_ADDR_I_1_OFFSET = 7'h 44;
  parameter logic [6:0] SYSTEM_CLOCK_STA_MAIN_STATUS_O_0_OFFSET = 7'h 48;
  parameter logic [6:0] SYSTEM_CLOCK_STA_MAIN_STATUS_O_1_OFFSET = 7'h 4c;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_FC_DIMENSION_I_OFFSET = 7'h 50;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_FC_OFFSET_I_OFFSET = 7'h 54;
  parameter logic [6:0] SYSTEM_CLOCK_STA_TRANS_PTR_O_0_OFFSET = 7'h 58;
  parameter logic [6:0] SYSTEM_CLOCK_STA_TRANS_PTR_O_1_OFFSET = 7'h 5c;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_FC_TRAN_SIZE_I_0_OFFSET = 7'h 60;
  parameter logic [6:0] SYSTEM_CLOCK_CFG_FC_TRAN_SIZE_I_1_OFFSET = 7'h 64;


  // Register Index
  typedef enum int {
    SYSTEM_CLOCK_CFG_MAIN_CTRL_I_0,
    SYSTEM_CLOCK_CFG_MAIN_CTRL_I_1,
    SYSTEM_CLOCK_CFG_OUT_STREAM_I_0,
    SYSTEM_CLOCK_CFG_OUT_STREAM_I_1,
    SYSTEM_CLOCK_CFG_TCDM_START_ADDR_I_0,
    SYSTEM_CLOCK_CFG_TCDM_START_ADDR_I_1,
    SYSTEM_CLOCK_CFG_TCDM_ADDR_STEP_I_0,
    SYSTEM_CLOCK_CFG_TCDM_ADDR_STEP_I_1,
    SYSTEM_CLOCK_CFG_TCDM_END_ADDR_I_0,
    SYSTEM_CLOCK_CFG_TCDM_END_ADDR_I_1,
    SYSTEM_CLOCK_CFG_TCDM_TRAN_SIZE_I_0,
    SYSTEM_CLOCK_CFG_TCDM_TRAN_SIZE_I_1,
    SYSTEM_CLOCK_CFG_SRAM_START_ADDR_I_0,
    SYSTEM_CLOCK_CFG_SRAM_START_ADDR_I_1,
    SYSTEM_CLOCK_CFG_SRAM_ADDR_STEP_I_0,
    SYSTEM_CLOCK_CFG_SRAM_ADDR_STEP_I_1,
    SYSTEM_CLOCK_CFG_SRAM_END_ADDR_I_0,
    SYSTEM_CLOCK_CFG_SRAM_END_ADDR_I_1,
    SYSTEM_CLOCK_STA_MAIN_STATUS_O_0,
    SYSTEM_CLOCK_STA_MAIN_STATUS_O_1,
    SYSTEM_CLOCK_CFG_FC_DIMENSION_I,
    SYSTEM_CLOCK_CFG_FC_OFFSET_I,
    SYSTEM_CLOCK_STA_TRANS_PTR_O_0,
    SYSTEM_CLOCK_STA_TRANS_PTR_O_1,
    SYSTEM_CLOCK_CFG_FC_TRAN_SIZE_I_0,
    SYSTEM_CLOCK_CFG_FC_TRAN_SIZE_I_1
  } system_clock_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] SYSTEM_CLOCK_PERMIT [26] = '{
    4'b 1111, // index[ 0] SYSTEM_CLOCK_CFG_MAIN_CTRL_I_0
    4'b 1111, // index[ 1] SYSTEM_CLOCK_CFG_MAIN_CTRL_I_1
    4'b 1111, // index[ 2] SYSTEM_CLOCK_CFG_OUT_STREAM_I_0
    4'b 1111, // index[ 3] SYSTEM_CLOCK_CFG_OUT_STREAM_I_1
    4'b 1111, // index[ 4] SYSTEM_CLOCK_CFG_TCDM_START_ADDR_I_0
    4'b 1111, // index[ 5] SYSTEM_CLOCK_CFG_TCDM_START_ADDR_I_1
    4'b 1111, // index[ 6] SYSTEM_CLOCK_CFG_TCDM_ADDR_STEP_I_0
    4'b 1111, // index[ 7] SYSTEM_CLOCK_CFG_TCDM_ADDR_STEP_I_1
    4'b 1111, // index[ 8] SYSTEM_CLOCK_CFG_TCDM_END_ADDR_I_0
    4'b 1111, // index[ 9] SYSTEM_CLOCK_CFG_TCDM_END_ADDR_I_1
    4'b 1111, // index[10] SYSTEM_CLOCK_CFG_TCDM_TRAN_SIZE_I_0
    4'b 1111, // index[11] SYSTEM_CLOCK_CFG_TCDM_TRAN_SIZE_I_1
    4'b 1111, // index[12] SYSTEM_CLOCK_CFG_SRAM_START_ADDR_I_0
    4'b 1111, // index[13] SYSTEM_CLOCK_CFG_SRAM_START_ADDR_I_1
    4'b 1111, // index[14] SYSTEM_CLOCK_CFG_SRAM_ADDR_STEP_I_0
    4'b 1111, // index[15] SYSTEM_CLOCK_CFG_SRAM_ADDR_STEP_I_1
    4'b 1111, // index[16] SYSTEM_CLOCK_CFG_SRAM_END_ADDR_I_0
    4'b 1111, // index[17] SYSTEM_CLOCK_CFG_SRAM_END_ADDR_I_1
    4'b 1111, // index[18] SYSTEM_CLOCK_STA_MAIN_STATUS_O_0
    4'b 1111, // index[19] SYSTEM_CLOCK_STA_MAIN_STATUS_O_1
    4'b 1111, // index[20] SYSTEM_CLOCK_CFG_FC_DIMENSION_I
    4'b 1111, // index[21] SYSTEM_CLOCK_CFG_FC_OFFSET_I
    4'b 1111, // index[22] SYSTEM_CLOCK_STA_TRANS_PTR_O_0
    4'b 1111, // index[23] SYSTEM_CLOCK_STA_TRANS_PTR_O_1
    4'b 1111, // index[24] SYSTEM_CLOCK_CFG_FC_TRAN_SIZE_I_0
    4'b 1111  // index[25] SYSTEM_CLOCK_CFG_FC_TRAN_SIZE_I_1
  };
endpackage

